name: Promote to production

on:
  workflow_dispatch: {}

concurrency:
  group: promote-to-production
  cancel-in-progress: true

jobs:
  preprod-tests:
    if: github.ref == 'refs/heads/master'
    uses: ./.github/workflows/preprod-tests.yml
    with:
      python-version: '3.13'
    secrets: inherit

  open-pull-request:
    if: github.ref == 'refs/heads/master'
    needs: preprod-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    env:
      MACHINE_TOKEN: ${{ secrets.MACHINE_USER_TOKEN }}  # must be set in repo secrets
    steps:
      - name: Assert machine token is present
        run: |
          if [ -z "${MACHINE_TOKEN}" ]; then
            echo "MACHINE_USER_TOKEN is missing in repository secrets." >&2
            exit 1
          fi

      - name: Diff master vs production
        id: diff
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.MACHINE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const base = 'production';
            const head = 'master';
            const cmp = await github.rest.repos.compareCommits({ owner, repo, base, head });
            const skip = cmp.data.ahead_by === 0 ? 'true' : 'false';
            core.setOutput('skip', skip);
            core.notice(skip === 'true'
              ? 'No differences between master and production.'
              : `Diff found: master is ahead by ${cmp.data.ahead_by} commit(s).`);

      - name: Create or find PR master → production
        if: steps.diff.outputs.skip != 'true'
        id: create_pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ env.MACHINE_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const base = 'production';
            const head = 'master';

            // Check if an open PR already exists
            const listResp = await github.rest.pulls.list({
              owner, repo, state: 'open', base, head: `${owner}:${head}`
            });
            if (listResp.data.length > 0) {
              const pr = listResp.data[0];
              core.notice(`PR already open: #${pr.number}`);
              core.setOutput('pr_number', pr.number.toString());
              return;
            }

            // Create a new PR
            const createResp = await github.rest.pulls.create({
              owner, repo,
              title: `Promote ${head} → ${base}`,
              head, base,
              body: 'Manual promotion. Review the changes and merge after checks are green.'
            });
            core.notice(`Created PR #${createResp.data.number}`);
            core.setOutput('pr_number', createResp.data.number.toString());
