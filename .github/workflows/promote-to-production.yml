name: Promote to production

on:
  workflow_dispatch: {}

concurrency:
  group: promote-to-production
  cancel-in-progress: true

jobs:
  open_pr:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: read
    outputs:
      pr_number: ${{ steps.create.outputs.pr_number }}
      head_sha:  ${{ steps.create.outputs.head_sha }}
      skip:      ${{ steps.diff.outputs.skip }}
    steps:
      - name: Diff master vs production
        id: diff
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const { owner, repo } = context.repo;
            const base = 'production';
            const head = 'master';
            const cmp = await github.rest.repos.compareCommits({ owner, repo, base, head });
            const skip = cmp.data.ahead_by === 0 ? 'true' : 'false';
            core.setOutput('skip', skip);

      - name: Create or find PR master → production
        if: steps.diff.outputs.skip != 'true'
        id: create
        uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            const { owner, repo } = context.repo;
            const base = 'production';
            const head = 'master';

            const open = await github.rest.pulls.list({ owner, repo, state: 'open', base, head: `${owner}:${head}` });
            if (open.data.length) {
              const pr = open.data[0];
              core.notice(`PR already open: #${pr.number}`);
              core.setOutput('pr_number', String(pr.number));
              core.setOutput('head_sha', pr.head.sha);
              return;
            }

            const pr = await github.rest.pulls.create({
              owner, repo, title: `Promote ${head} → ${base}`, head, base,
              body: 'Manual promotion. Review the changes and merge after checks are green.'
            });
            core.notice(`Created PR #${pr.data.number}`);
            core.setOutput('pr_number', String(pr.data.number));
            core.setOutput('head_sha', pr.data.head.sha);

  tests:
    # Всегда запускаем после open_pr, чтобы чек "Promote to production / tests"
    # появился на коммите PR даже при отсутствии diff
    needs: open_pr
    if: always() && needs.open_pr.result == 'success'
    runs-on: ubuntu-latest
    name: tests
    permissions:
      contents: read
    env:
      NO_DIFF:  ${{ needs.open_pr.outputs.skip }}
      HEAD_SHA: ${{ needs.open_pr.outputs.head_sha }}
    steps:
      - name: No diff — short-circuit
        if: env.NO_DIFF == 'true'
        run: echo "No diff; skipping tests but marking check as success."

      - name: Checkout PR head
        if: env.NO_DIFF != 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ env.HEAD_SHA }}
          fetch-depth: 0

      - name: Set up Python
        if: env.NO_DIFF != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install Poetry
        if: env.NO_DIFF != 'true'
        uses: snok/install-poetry@v1
        with:
          version: 1.8.3
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache venv
        if: env.NO_DIFF != 'true'
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-py3.13-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies (with dev)
        if: env.NO_DIFF != 'true'
        run: poetry install --with dev --no-interaction

      - name: Run tests
        if: env.NO_DIFF != 'true'
        run: poetry run pytest -q
