name: Promote to production

on:
  workflow_dispatch:
    inputs:
      require_green_master:
        description: 'Требовать, чтобы последний прогон tests на master был зелёный'
        type: boolean
        default: true

jobs:
  open-pull-request:
    runs-on: ubuntu-latest
    permissions:
      contents: write         # чтобы читать/писать в репозиторий при необходимости
      pull-requests: write    # чтобы создавать PR
      actions: read           # чтобы читать статусы раннов
    steps:
      - name: Create or find PR master → production
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const base = 'production';
            const head = 'master';

            // 1) По желанию — проверяем, что последний ранн workflow "tests" на master зелёный
            const requireGreen = core.getInput('require_green_master') === 'true';
            if (requireGreen) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner, repo,
                workflow_id: 'tests.yml',   // наш файл с тестами
                branch: head,
                per_page: 1
              });
              const last = runs.data.workflow_runs[0];
              if (!last || last.conclusion !== 'success') {
                core.setFailed(
                  `Последний 'tests' на ${head} не зелёный. status=${last?.status}, conclusion=${last?.conclusion}`
                );
                return;
              }
            }

            // 2) Ищем уже открытый PR master → production
            const prs = await github.rest.pulls.list({
              owner, repo, state: 'open', base, head: `${owner}:${head}`
            });

            if (prs.data.length) {
              core.notice(`PR уже открыт: #${prs.data[0].number}`);
              core.setOutput('pr_number', prs.data[0].number);
              return;
            }

            // 3) Создаём новый PR
            const pr = await github.rest.pulls.create({
              owner, repo,
              title: `Promote ${head} → ${base}`,
              head, base,
              body: 'Ручной промоут. Проверь изменения и смержи после зелёных чеков.'
            });

            core.notice(`Создан PR #${pr.data.number}`);
            core.setOutput('pr_number', pr.data.number);
